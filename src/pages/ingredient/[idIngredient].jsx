import { useState } from "react";
import Head from "next/head";
import styles from "./Ingredient.module.scss";
import Navbar from "@/components/Navbar";
import Button from "@/components/Button";
import { LuArrowLeft } from "react-icons/lu";
import { useRouter } from "next/navigation";
import { getData } from "@/utils/dbManager";
import CardHero from "@/components/CardHero";

const Ingredient = ({ data, ingredientName }) => {
  // VARIABLES ----------------
  const router = useRouter();
  // CONDITIONS ---------------
  const [pageTitle, setPageTitle] = useState(ingredientName);
  const [pageSubtitle, setPageSubtitle] = useState(
    "Recipes found: " + data?.length
  );
  // FUNCTIONS ----------------
  // RETURN -------------------
  return (
    <>
      <Head>
        <title>{pageTitle}</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={styles.HomePage}>
        <main>
          {/* ------------ NAVBAR ------------ */}
          <Navbar
            leftButton={
              <Button
                icon={() => <LuArrowLeft size={24} />}
                type="text"
                color="dark"
                onClick={() => {
                  router.back();
                }}
              />
            }
            pageTitle={pageTitle}
            rightButton={null}
          />
          {/* ----------- HEADER ------------- */}
          <div className="page-header">
            <h1>{pageTitle}</h1>
            <p>{pageSubtitle}</p>
          </div>

          {/* ------ INIZIO CONTENUTO PAGINA / ELEMENTI DELLA PAGINA ------ */}
          <div className={styles.content}>
            {data?.map((recip, index) => {
              return (
                <CardHero
                  key={index + "ingredients based"}
                  data={recip}
                  onClick={() => router.push("/recipe/" + recip.idMeal)}
                />
              );
            })}
          </div>

          {/* ------ FINE CONTENUTO PAGINA / ELEMENTI DELLA PAGINA ------ */}
        </main>
      </div>
    </>
  );
};

export default Ingredient;

export async function getServerSideProps(context) {
  const search = context.query.idIngredient;
  // console.log(search);

  let data = await getData.ingridient(search);
  let ingredientName = search;

  return {
    props: {
      data: data,
      ingredientName: ingredientName,
    },
  };
}
