import { useState } from "react";
import Head from "next/head";
import styles from "./recipe.module.scss";
import Navbar from "@/components/Navbar";
import Button from "@/components/Button";
import { LuArrowLeft, LuPlay } from "react-icons/lu";
import CardVideo from "@/components/CardVideo";
import CardHeroRecipe from "@/components/CardHeroRecipe";
const recipe = ({ data }) => {
  // VARIABLES ----------------
  const recipe = data.meals[0];

  const ingredients = Object.entries(recipe)
    .filter(
      ([ingredients, values]) =>
        ingredients.startsWith("strIngredient") &&
        values !== null &&
        values !== ""
    )
    .map(([ingredients, values]) => values);

  const measure = Object.entries(recipe)
    .filter(
      ([ingredients, values]) =>
        ingredients.startsWith("strMeasure") && values !== null && values !== ""
    )
    .map(([ingredients, values]) => values);

  // CONDITIONS ---------------
  // FUNCTIONS ----------------
  // RETURN -------------------
  return (
    <>
      <Head>
        <title>Ricette</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        {/* ------------ NAVBAR ------------ */}
        <Navbar
          leftButton={
            <Button
              icon={() => <LuArrowLeft size={24} />}
              type="text"
              color="dark"
            />
          }
          pageTitle={""}
          rightButton={null}
        />
      </main>

      {/* ------ INIZIO CONTENUTO PAGINA / ELEMENTI DELLA PAGINA ------ */}
      {data?.meals.map((recipe) => (
        <div className={styles.Recipe} key={recipe.idMeal}>
          <div className={styles.CardHero}>
            {recipe.strYoutube === "" ? (
              <CardHeroRecipe data={data} />
            ) : (
              <a className={styles.link} href={recipe.strYoutube}>
                <CardHeroRecipe data={data} />
                <div className={styles.buttonCenter}>
                  <Button
                    shape="round"
                    size="xxs"
                    width="40"
                    icon={() => <LuPlay />}
                  />
                </div>
              </a>
            )}
          </div>
          <div className={styles.wrapper}>
            <section className={styles.Instructions}>
              <h4 className={styles.TitleInstr}>Instruction</h4>
              <p className={styles.Desc}>{recipe.strInstructions}</p>
            </section>
            <section className={styles.Ingredients}>
              <h4 className={styles.TitleIngr}>Ingredients</h4>
              {ingredients?.map((ingredients, index) => (
                <div className={styles.container} key={index + ingredients}>
                  <div className={styles.img}>
                    <img
                      src={`https://www.themealdb.com/images/ingredients/${ingredients}.png`}
                    />
                  </div>
                  <div className={styles.IngrContainer}>
                    <h3 className={styles.IngrText}>{ingredients}</h3>
                  </div>
                  <p className={styles.Measure}>{measure[index]}</p>
                </div>
              ))}
            </section>
          </div>
        </div>
      ))}
      {/* ------ FINE CONTENUTO PAGINA / ELEMENTI DELLA PAGINA ------ */}
    </>
  );
};

export default recipe;

export async function getServerSideProps(context) {
  const search = context.query.id;
  const res = await fetch(
    `https://www.themealdb.com/api/json/v1/1/lookup.php?i=${search}`
  );
  const data = await res.json();

  return { props: { data } };
}
