import Head from "next/head";
import styles from "./recipe.module.scss";
import Navbar from "@/components/Navbar";
import Button from "@/components/Button";
import { LuArrowLeft, LuPlay } from "react-icons/lu";
import CardHeroRecipe from "@/components/CardHeroRecipe";
import { useRouter } from "next/navigation";
import { collection, getDocs, query, where } from "firebase/firestore";
import { db } from "@/firebase/config";
import { useState } from "react";

const Recipe = ({ data }) => {
  // VARIABLES ----------------
  const router = useRouter();

  // CONDITIONS ---------------
  const [recipe, setRecipe] = useState(data);
  // FUNCTIONS ----------------
  const onHandlePlay = () => window.open(recipe.strYoutube, "_blank");

  const ingredients = Object.entries(recipe)
    .filter(
      ([ingredients, values]) =>
        ingredients.startsWith("strIngredient") &&
        values !== null &&
        values !== ""
    )
    .map(([ingredients, values]) => values);

  const measure = Object.entries(recipe)
    .filter(
      ([ingredients, values]) =>
        ingredients.startsWith("strMeasure") && values !== null && values !== ""
    )
    .map(([ingredients, values]) => values);
  // RETURN -------------------
  return (
    <>
      <Head>
        <title>Ricette</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        {/* ------------ NAVBAR ------------ */}
        <Navbar
          leftButton={
            <Button
              onClick={() => {
                router.back();
              }}
              icon={() => <LuArrowLeft size={24} />}
              type="text"
              color="dark"
            />
          }
          pageTitle={recipe.strMeal}
          rightButton={null}
        />
      </main>

      {/* ------ INIZIO CONTENUTO PAGINA / ELEMENTI DELLA PAGINA ------ */}

      <div className={styles.Recipe} key={recipe.idMeal}>
        <div className={styles.CardHero}>
          {recipe.strYoutube === "" ? (
            <CardHeroRecipe data={recipe} />
          ) : (
            <div className={styles.link}>
              <CardHeroRecipe data={recipe} />
              <div className={styles.buttonCenter}>
                <Button
                  onClick={() => onHandlePlay()}
                  shape="round"
                  size="sm"
                  width="40"
                  icon={() => <LuPlay size={24} />}
                />
              </div>
            </div>
          )}
        </div>
        <div className={styles.wrapper}>
          <section className={styles.Instructions}>
            <h4 className={styles.TitleInstr}>Instruction</h4>
            <p className={styles.Desc}>{recipe.strInstructions}</p>
          </section>
          <section className={styles.Ingredients}>
            <h4 className={styles.TitleIngr}>Ingredients</h4>
            {ingredients?.map((ingredients, index) => (
              <div className={styles.container} key={index + ingredients}>
                <div className={styles.img}>
                  <img
                    src={`https://www.themealdb.com/images/ingredients/${ingredients}.png`}
                  />
                </div>
                <div className={styles.IngrContainer}>
                  <h3 className={styles.IngrText}>{ingredients}</h3>
                </div>
                <p className={styles.Measure}>{measure[index]}</p>
              </div>
            ))}
          </section>
        </div>
      </div>

      {/* ------ FINE CONTENUTO PAGINA / ELEMENTI DELLA PAGINA ------ */}
    </>
  );
};

export default Recipe;

export async function getServerSideProps(context) {
  const search = context.query.id;
  let data;
  const recipesRef = collection(db, "recipes");
  const dataQ = query(recipesRef, where("idMeal", "==", search));

  const querySnapshot = await getDocs(dataQ);
  querySnapshot.forEach((doc) => {
    data = doc.data();
  });

  return { props: { data } };
}
